@Test                                                                                                  @Test                                                                                               
public void testAttributeNotUpdatedWhenColorModeIsNotColorTemperature() {                              public void testAttributeNotUpdatedWhenColorModeIsNotColorTemperature() {                           
ZigBeeEndpoint endpoint = Mockito.mock(ZigBeeEndpoint.class);                                          ZigBeeEndpoint endpoint = Mockito.mock(ZigBeeEndpoint.class);                                       
ZigBeeCoordinatorHandler coordinatorHandler = Mockito.mock(ZigBeeCoordinatorHandler.class);            ZigBeeCoordinatorHandler coordinatorHandler = Mockito.mock(ZigBeeCoordinatorHandler.class);         
Mockito.when(coordinatorHandler.getEndpoint(ArgumentMatchers.any(IeeeAddress.class), ArgumentMatcher   Mockito.when(coordinatorHandler.getEndpoint(ArgumentMatchers.any(IeeeAddress.class), ArgumentMatcher
ZigBeeConverterColorTemperature converter = getConverter();                                            ZigBeeConverterColorTemperature converter = getConverter();                                         
ArgumentCaptor&lt;ChannelUID&gt; channelCapture = ArgumentCaptor.forClass(ChannelUID.class);           ArgumentCaptor&lt;ChannelUID&gt; channelCapture = ArgumentCaptor.forClass(ChannelUID.class);        
ArgumentCaptor&lt;State&gt; stateCapture = ArgumentCaptor.forClass(State.class);                       ArgumentCaptor&lt;State&gt; stateCapture = ArgumentCaptor.forClass(State.class);                    
ZigBeeThingHandler thingHandler = Mockito.mock(ZigBeeThingHandler.class);                              ZigBeeThingHandler thingHandler = Mockito.mock(ZigBeeThingHandler.class);                           
Channel channel = ChannelBuilder.create(new ChannelUID("a:b:c:d"), "").build();                        Channel channel = ChannelBuilder.create(new ChannelUID("a:b:c:d"), "").build();                     
converter.initialize(channel, coordinatorHandler, new IeeeAddress("1234567890ABCDEF"), 1);             converter.initialize(channel, coordinatorHandler, new IeeeAddress("1234567890ABCDEF"), 1);          
converter.initializeConverter(thingHandler);                                                           converter.initializeConverter(thingHandler);                                                        
ZclAttribute colorModeAttribute = new ZclAttribute(new ZclColorControlCluster(endpoint), 8, "ColorMo   ZclAttribute colorModeAttribute = new ZclAttribute(new ZclColorControlCluster(endpoint), 8, "ColorMo
ZclAttribute colorTemperatureAttribute = new ZclAttribute(new ZclColorControlCluster(endpoint), 7, "   ZclAttribute colorTemperatureAttribute = new ZclAttribute(new ZclColorControlCluster(endpoint), 7, "
// Update the color mode to CURRENTHUE_AND_CURRENTSATURATION and ensure that the state is set to UND   // Update the color mode to CURRENTHUE_AND_CURRENTSATURATION and ensure that the state is set to UND
colorModeAttribute.updateValue(ColorModeEnum.CURRENT_HUE_AND_CURRENT_SATURATION.getKey());             colorModeAttribute.updateValue(ColorModeEnum.CURRENT_HUE_AND_CURRENT_SATURATION.getKey());          
converter.attributeUpdated(colorModeAttribute, colorModeAttribute.getLastValue());                     converter.attributeUpdated(colorModeAttribute, colorModeAttribute.getLastValue());                  
Mockito.verify(thingHandler, Mockito.times(1)).setChannelState(channelCapture.capture(), stateCaptur   Mockito.verify(thingHandler, Mockito.times(1)).setChannelState(channelCapture.capture(), stateCaptur
assertEquals(UnDefType.UNDEF, stateCapture.getValue());                                                assertEquals(UnDefType.UNDEF, stateCapture.getValue());                                             
// Set the color temperature and ensure that the channel is not set                                  |                                                                                                     
colorTemperatureAttribute.updateValue(Integer.valueOf(100));                                         |                                                                                                     
converter.attributeUpdated(colorTemperatureAttribute, colorTemperatureAttribute.getLastValue());     |                                                                                                     
Mockito.verify(thingHandler, Mockito.times(1)).setChannelState(channelCapture.capture(), stateCaptur |                                                                                                     
// Update the color mode to CURRENTX_AND_CURRENTY and ensure that the state is set to UNDEF            // Update the color mode to CURRENTX_AND_CURRENTY and ensure that the state is set to UNDEF         
colorModeAttribute.updateValue(ColorModeEnum.CURRENT_X_AND_CURRENT_Y.getKey());                        colorModeAttribute.updateValue(ColorModeEnum.CURRENT_X_AND_CURRENT_Y.getKey());                     
converter.attributeUpdated(colorModeAttribute, colorModeAttribute.getLastValue());                     converter.attributeUpdated(colorModeAttribute, colorModeAttribute.getLastValue());                  
Mockito.verify(thingHandler, Mockito.times(2)).setChannelState(channelCapture.capture(), stateCaptur   Mockito.verify(thingHandler, Mockito.times(2)).setChannelState(channelCapture.capture(), stateCaptur
assertEquals(UnDefType.UNDEF, stateCapture.getValue());                                                assertEquals(UnDefType.UNDEF, stateCapture.getValue());                                             
// Set the color temperature and ensure that the channel is not set                                  |                                                                                                     
colorTemperatureAttribute.updateValue(Integer.valueOf(100));                                         |                                                                                                     
converter.attributeUpdated(colorTemperatureAttribute, colorTemperatureAttribute.getLastValue());     |                                                                                                     
Mockito.verify(thingHandler, Mockito.times(2)).setChannelState(channelCapture.capture(), stateCaptur |                                                                                                     
}                                                                                                      }                                                                                                   
