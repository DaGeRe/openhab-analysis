@Test                                                                                                  @Test                                                                                               
public void testAttributeUpdated() {                                                                   public void testAttributeUpdated() {                                                                
ZigBeeEndpoint endpoint = Mockito.mock(ZigBeeEndpoint.class);                                          ZigBeeEndpoint endpoint = Mockito.mock(ZigBeeEndpoint.class);                                       
ZigBeeCoordinatorHandler coordinatorHandler = Mockito.mock(ZigBeeCoordinatorHandler.class);            ZigBeeCoordinatorHandler coordinatorHandler = Mockito.mock(ZigBeeCoordinatorHandler.class);         
Mockito.when(coordinatorHandler.getEndpoint(ArgumentMatchers.any(IeeeAddress.class), ArgumentMatcher   Mockito.when(coordinatorHandler.getEndpoint(ArgumentMatchers.any(IeeeAddress.class), ArgumentMatcher
ZigBeeConverterColorColor converter = new ZigBeeConverterColorColor();                                 ZigBeeConverterColorColor converter = new ZigBeeConverterColorColor();                              
ArgumentCaptor&lt;ChannelUID&gt; channelCapture = ArgumentCaptor.forClass(ChannelUID.class);           ArgumentCaptor&lt;ChannelUID&gt; channelCapture = ArgumentCaptor.forClass(ChannelUID.class);        
ArgumentCaptor&lt;State&gt; stateCapture = ArgumentCaptor.forClass(State.class);                       ArgumentCaptor&lt;State&gt; stateCapture = ArgumentCaptor.forClass(State.class);                    
ZigBeeThingHandler thingHandler = Mockito.mock(ZigBeeThingHandler.class);                              ZigBeeThingHandler thingHandler = Mockito.mock(ZigBeeThingHandler.class);                           
Channel channel = ChannelBuilder.create(new ChannelUID("a:b:c:d"), "").build();                        Channel channel = ChannelBuilder.create(new ChannelUID("a:b:c:d"), "").build();                     
converter.initialize(channel, coordinatorHandler, new IeeeAddress("1234567890ABCDEF"), 1);             converter.initialize(channel, coordinatorHandler, new IeeeAddress("1234567890ABCDEF"), 1);          
converter.initializeConverter(thingHandler);                                                           converter.initializeConverter(thingHandler);                                                        
ZclAttribute onAttribute = new ZclAttribute(new ZclOnOffCluster(endpoint), 0, "OnOff", ZclDataType.B   ZclAttribute onAttribute = new ZclAttribute(new ZclOnOffCluster(endpoint), 0, "OnOff", ZclDataType.B
ZclAttribute levelAttribute = new ZclAttribute(new ZclLevelControlCluster(endpoint), 0, "Level", Zcl   ZclAttribute levelAttribute = new ZclAttribute(new ZclLevelControlCluster(endpoint), 0, "Level", Zcl
// The following sequence checks that the level is ignored if the OnOff state is OFF                   // The following sequence checks that the level is ignored if the OnOff state is OFF                
// Note that the converter assumes the default HSB is 0,0,100, so this is returned first.              // Note that the converter assumes the default HSB is 0,0,100, so this is returned first.           
onAttribute.updateValue(Boolean.TRUE);                                                                 onAttribute.updateValue(Boolean.TRUE);                                                              
converter.attributeUpdated(onAttribute, onAttribute.getLastValue());                                   converter.attributeUpdated(onAttribute, onAttribute.getLastValue());                                
Mockito.verify(thingHandler, Mockito.times(1)).setChannelState(channelCapture.capture(), stateCaptur   Mockito.verify(thingHandler, Mockito.times(1)).setChannelState(channelCapture.capture(), stateCaptur
assertEquals(new ChannelUID("a:b:c:d"), channelCapture.getValue());                                    assertEquals(new ChannelUID("a:b:c:d"), channelCapture.getValue());                                 
assertEquals(new HSBType("0,0,100"), stateCapture.getValue());                                         assertEquals(new HSBType("0,0,100"), stateCapture.getValue());                                      
// Set the level to ensure that when no OnOff has been received, state updates are made                // Set the level to ensure that when no OnOff has been received, state updates are made             
levelAttribute.updateValue(Integer.valueOf(50));                                                       levelAttribute.updateValue(Integer.valueOf(50));                                                    
converter.attributeUpdated(levelAttribute, levelAttribute.getLastValue());                             converter.attributeUpdated(levelAttribute, levelAttribute.getLastValue());                          
Mockito.verify(thingHandler, Mockito.times(2)).setChannelState(channelCapture.capture(), stateCaptur   Mockito.verify(thingHandler, Mockito.times(2)).setChannelState(channelCapture.capture(), stateCaptur
assertEquals(new HSBType("0,0,20"), stateCapture.getValue());                                          assertEquals(new HSBType("0,0,20"), stateCapture.getValue());                                       
// Turn OFF, and state should be OFF (indeed 0,0,0)                                                    // Turn OFF, and state should be OFF (indeed 0,0,0)                                                 
onAttribute.updateValue(Boolean.FALSE);                                                                onAttribute.updateValue(Boolean.FALSE);                                                             
converter.attributeUpdated(onAttribute, onAttribute.getLastValue());                                   converter.attributeUpdated(onAttribute, onAttribute.getLastValue());                                
Mockito.verify(thingHandler, Mockito.times(3)).setChannelState(channelCapture.capture(), stateCaptur   Mockito.verify(thingHandler, Mockito.times(3)).setChannelState(channelCapture.capture(), stateCaptur
assertEquals(new ChannelUID("a:b:c:d"), channelCapture.getValue());                                    assertEquals(new ChannelUID("a:b:c:d"), channelCapture.getValue());                                 
assertEquals(new HSBType("0,0,0"), stateCapture.getValue());                                           assertEquals(new HSBType("0,0,0"), stateCapture.getValue());                                        
// No update here since state is OFF, but we remember the level (20%)...                               // No update here since state is OFF, but we remember the level (20%)...                            
levelAttribute.updateValue(Integer.valueOf(101));                                                      levelAttribute.updateValue(Integer.valueOf(101));                                                   
converter.attributeUpdated(levelAttribute, levelAttribute.getLastValue());                             converter.attributeUpdated(levelAttribute, levelAttribute.getLastValue());                          
Mockito.verify(thingHandler, Mockito.times(4)).setChannelState(channelCapture.capture(), stateCaptur | Mockito.verify(thingHandler, Mockito.times(3)).setChannelState(channelCapture.capture(), stateCaptur
// When turned ON, we are set to the last level                                                        // When turned ON, we are set to the last level                                                     
onAttribute.updateValue(Boolean.TRUE);                                                                 onAttribute.updateValue(Boolean.TRUE);                                                              
converter.attributeUpdated(onAttribute, onAttribute.getLastValue());                                   converter.attributeUpdated(onAttribute, onAttribute.getLastValue());                                
Mockito.verify(thingHandler, Mockito.times(5)).setChannelState(channelCapture.capture(), stateCaptur | Mockito.verify(thingHandler, Mockito.times(4)).setChannelState(channelCapture.capture(), stateCaptur
assertEquals(new HSBType("0,0,40"), stateCapture.getValue());                                          assertEquals(new HSBType("0,0,40"), stateCapture.getValue());                                       
// Set the level and ensure it updates                                                                 // Set the level and ensure it updates                                                              
levelAttribute.updateValue(Integer.valueOf(50));                                                       levelAttribute.updateValue(Integer.valueOf(50));                                                    
converter.attributeUpdated(levelAttribute, levelAttribute.getLastValue());                             converter.attributeUpdated(levelAttribute, levelAttribute.getLastValue());                          
Mockito.verify(thingHandler, Mockito.times(6)).setChannelState(channelCapture.capture(), stateCaptur | Mockito.verify(thingHandler, Mockito.times(5)).setChannelState(channelCapture.capture(), stateCaptur
assertEquals(new HSBType("0,0,20"), stateCapture.getValue());                                          assertEquals(new HSBType("0,0,20"), stateCapture.getValue());                                       
}                                                                                                      }                                                                                                   
