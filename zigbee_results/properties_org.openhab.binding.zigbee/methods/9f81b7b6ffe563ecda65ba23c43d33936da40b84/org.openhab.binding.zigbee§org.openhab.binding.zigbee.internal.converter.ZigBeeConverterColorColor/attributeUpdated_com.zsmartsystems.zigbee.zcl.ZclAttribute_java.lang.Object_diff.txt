@Override                                                                                              @Override                                                                                           
public void attributeUpdated(ZclAttribute attribute, Object val) {                                     public void attributeUpdated(ZclAttribute attribute, Object val) {                                  
logger.debug("{}: ZigBee attribute reports {}", endpoint.getIeeeAddress(), attribute);                 logger.debug("{}: ZigBee attribute reports {}", endpoint.getIeeeAddress(), attribute);              
synchronized (colorUpdateSync) {                                                                       synchronized (colorUpdateSync) {                                                                    
try {                                                                                                  try {                                                                                               
switch(attribute.getClusterType().getId()) {                                                           switch(attribute.getClusterType().getId()) {                                                        
case ZclOnOffCluster.CLUSTER_ID:                                                                       case ZclOnOffCluster.CLUSTER_ID:                                                                    
if (attribute.getId() == ZclOnOffCluster.ATTR_ONOFF) {                                                 if (attribute.getId() == ZclOnOffCluster.ATTR_ONOFF) {                                              
Boolean value = (Boolean) val;                                                                         Boolean value = (Boolean) val;                                                                      
OnOffType onoff = value ? OnOffType.ON : OnOffType.OFF;                                                OnOffType onoff = value ? OnOffType.ON : OnOffType.OFF;                                             
updateOnOff(onoff);                                                                                    updateOnOff(onoff);                                                                                 
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
case ZclLevelControlCluster.CLUSTER_ID:                                                                case ZclLevelControlCluster.CLUSTER_ID:                                                             
if (attribute.getId() == ZclLevelControlCluster.ATTR_CURRENTLEVEL) {                                   if (attribute.getId() == ZclLevelControlCluster.ATTR_CURRENTLEVEL) {                                
PercentType brightness = levelToPercent((Integer) val);                                                PercentType brightness = levelToPercent((Integer) val);                                             
updateBrightness(brightness);                                                                          updateBrightness(brightness);                                                                       
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
case ZclColorControlCluster.CLUSTER_ID:                                                                case ZclColorControlCluster.CLUSTER_ID:                                                             
switch(attribute.getId()) {                                                                            switch(attribute.getId()) {                                                                         
case ZclColorControlCluster.ATTR_CURRENTHUE:                                                           case ZclColorControlCluster.ATTR_CURRENTHUE:                                                        
int hue = (Integer) val;                                                                               int hue = (Integer) val;                                                                            
if (hue != lastHue) {                                                                                  if (hue != lastHue) {                                                                               
lastHue = hue;                                                                                         lastHue = hue;                                                                                      
hueChanged = true;                                                                                     hueChanged = true;                                                                                  
}                                                                                                      }                                                                                                   
lastMired = -1;                                                                                        lastMired = -1;                                                                                     
break;                                                                                                 break;                                                                                              
case ZclColorControlCluster.ATTR_CURRENTSATURATION:                                                    case ZclColorControlCluster.ATTR_CURRENTSATURATION:                                                 
int saturation = (Integer) val;                                                                        int saturation = (Integer) val;                                                                     
if (saturation != lastSaturation) {                                                                    if (saturation != lastSaturation) {                                                                 
lastSaturation = saturation;                                                                           lastSaturation = saturation;                                                                        
saturationChanged = true;                                                                              saturationChanged = true;                                                                           
}                                                                                                      }                                                                                                   
lastMired = -1;                                                                                        lastMired = -1;                                                                                     
break;                                                                                                 break;                                                                                              
case ZclColorControlCluster.ATTR_CURRENTX:                                                             case ZclColorControlCluster.ATTR_CURRENTX:                                                          
int x = (Integer) val;                                                                                 int x = (Integer) val;                                                                              
if (x != lastX) {                                                                                      if (x != lastX) {                                                                                   
lastX = x;                                                                                             lastX = x;                                                                                          
xChanged = true;                                                                                       xChanged = true;                                                                                    
}                                                                                                      }                                                                                                   
lastMired = -1;                                                                                        lastMired = -1;                                                                                     
break;                                                                                                 break;                                                                                              
case ZclColorControlCluster.ATTR_CURRENTY:                                                             case ZclColorControlCluster.ATTR_CURRENTY:                                                          
int y = (Integer) val;                                                                                 int y = (Integer) val;                                                                              
if (y != lastY) {                                                                                      if (y != lastY) {                                                                                   
lastY = y;                                                                                             lastY = y;                                                                                          
yChanged = true;                                                                                       yChanged = true;                                                                                    
}                                                                                                      }                                                                                                   
lastMired = -1;                                                                                        lastMired = -1;                                                                                     
break;                                                                                                 break;                                                                                              
case ZclColorControlCluster.ATTR_COLORTEMPERATURE:                                                     case ZclColorControlCluster.ATTR_COLORTEMPERATURE:                                                  
if (val instanceof Integer mired && mired != lastMired) {                                              if (val instanceof Integer mired && mired != lastMired) {                                           
HSBType ctHSB = ColorUtil.xyToHsb(ColorUtil.kelvinToXY(1e6 / mired));                                  HSBType ctHSB = ColorUtil.xyToHsb(ColorUtil.kelvinToXY(1e6 / mired));                               
lastHSB = new HSBType(ctHSB.getHue(), ctHSB.getSaturation(), lastHSB.getBrightness());                 lastHSB = new HSBType(ctHSB.getHue(), ctHSB.getSaturation(), lastHSB.getBrightness());              
updateChannelState(lastHSB);                                                                           updateChannelState(lastHSB);                                                                        
lastMired = mired;                                                                                     lastMired = mired;                                                                                  
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
case ZclColorControlCluster.ATTR_COLORMODE:                                                            case ZclColorControlCluster.ATTR_COLORMODE:                                                         
Integer colorMode = (Integer) val;                                                                     Integer colorMode = (Integer) val;                                                                  
ColorModeEnum colorModeEnum = ColorModeEnum.getByValue(colorMode);                                     ColorModeEnum colorModeEnum = ColorModeEnum.getByValue(colorMode);                                  
if (colorModeEnum != ColorModeEnum.COLOR_TEMPERATURE) {                                                if (colorModeEnum != ColorModeEnum.COLOR_TEMPERATURE) {                                             
lastMired = -1;                                                                                        lastMired = -1;                                                                                     
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (hueChanged || saturationChanged || xChanged || yChanged) {                                         if (hueChanged || saturationChanged || xChanged || yChanged) {                                      
if (colorUpdateTimer != null) {                                                                        if (colorUpdateTimer != null) {                                                                     
colorUpdateTimer.cancel(true);                                                                         colorUpdateTimer.cancel(true);                                                                      
colorUpdateTimer = null;                                                                               colorUpdateTimer = null;                                                                            
}                                                                                                      }                                                                                                   
if (hueChanged && saturationChanged) {                                                               | if (supportsHue && hueChanged && saturationChanged) {                                               
updateColorHSB();                                                                                      updateColorHSB();                                                                                   
} else if (xChanged && yChanged) {                                                                   | } else if (!supportsHue && xChanged && yChanged) {                                                  
updateColorXY();                                                                                       updateColorXY();                                                                                    
} else {                                                                                               } else {                                                                                            
// Wait some time and update anyway if only one attribute in each pair is updated                      // Wait some time and update anyway if only one attribute in each pair is updated                   
colorUpdateTimer = colorUpdateScheduler.schedule(new Runnable() {                                      colorUpdateTimer = colorUpdateScheduler.schedule(new Runnable() {                                   
                                                                                                                                                                                                           
@Override                                                                                              @Override                                                                                           
public void run() {                                                                                    public void run() {                                                                                 
synchronized (colorUpdateSync) {                                                                       synchronized (colorUpdateSync) {                                                                    
try {                                                                                                  try {                                                                                               
if ((hueChanged || saturationChanged) && lastHue &gt;= 0.0f && lastSaturation &gt;= 0.0f) {          | if (supportsHue && (hueChanged || saturationChanged) && lastHue &gt;= 0.0f && lastSaturation &gt;= 0
updateColorHSB();                                                                                      updateColorHSB();                                                                                   
} else if ((xChanged || yChanged) && lastX &gt;= 0.0f && lastY &gt;= 0.0f) {                         | } else if (!supportsHue && (xChanged || yChanged) && lastX &gt;= 0.0f && lastY &gt;= 0.0f) {        
updateColorXY();                                                                                       updateColorXY();                                                                                    
}                                                                                                      }                                                                                                   
} catch (Exception e) {                                                                                } catch (Exception e) {                                                                             
logger.debug("{}: Exception in deferred attribute update", endpoint.getIeeeAddress(), e);              logger.debug("{}: Exception in deferred attribute update", endpoint.getIeeeAddress(), e);           
}                                                                                                      }                                                                                                   
colorUpdateTimer = null;                                                                               colorUpdateTimer = null;                                                                            
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}, 500, TimeUnit.MILLISECONDS);                                                                        }, 500, TimeUnit.MILLISECONDS);                                                                     
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
} catch (Exception e) {                                                                                } catch (Exception e) {                                                                             
logger.debug("{}: Exception in attribute update", endpoint.getIeeeAddress(), e);                       logger.debug("{}: Exception in attribute update", endpoint.getIeeeAddress(), e);                    
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
