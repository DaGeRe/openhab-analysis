private void determineDivisorAndMultiplier(ZclMeteringCluster clusterMetering) {                       private void determineDivisorAndMultiplier(ZclMeteringCluster clusterMetering) {                    
ZclAttribute divisorAttribute = clusterMetering.getAttribute(ZclMeteringCluster.ATTR_DIVISOR);         ZclAttribute divisorAttribute = clusterMetering.getAttribute(ZclMeteringCluster.ATTR_DIVISOR);      
ZclAttribute multiplierAttribute = clusterMetering.getAttribute(ZclMeteringCluster.ATTR_MULTIPLIER);   ZclAttribute multiplierAttribute = clusterMetering.getAttribute(ZclMeteringCluster.ATTR_MULTIPLIER);
Integer iDiv = (Integer) divisorAttribute.readValue(Long.MAX_VALUE);                                   Integer iDiv = (Integer) divisorAttribute.readValue(Long.MAX_VALUE);                                
Integer iMult = (Integer) multiplierAttribute.readValue(Long.MAX_VALUE);                               Integer iMult = (Integer) multiplierAttribute.readValue(Long.MAX_VALUE);                            
if (iDiv == null || iMult == null) {                                                                 | if (iDiv == null || iMult == null || iDiv == 0 || iMult == 0) {                                     
iDiv = 1;                                                                                              iDiv = 1;                                                                                           
iMult = 1;                                                                                             iMult = 1;                                                                                          
}                                                                                                      }                                                                                                   
divisor = iDiv;                                                                                        divisor = iDiv;                                                                                     
multiplier = iMult;                                                                                    multiplier = iMult;                                                                                 
}                                                                                                      }                                                                                                   
